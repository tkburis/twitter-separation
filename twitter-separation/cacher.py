import json
import os

# print('Imported cacher.py')


class Cacher:
    def __init__(self, cache_file_name='cache.txt'):
        """
        Makes cache file if does not exist already.
        :param cache_file_name: Constant of the name of the cache file
        """
        self.CACHE_FILE_NAME = cache_file_name
        if not os.path.exists(self.CACHE_FILE_NAME):
            with open(self.CACHE_FILE_NAME, 'w') as file:
                file.write('{}')
                file.close()

    def read_from_cache(self, user_id):
        """
        Returns screen name, following, followers, in dictionary-like format.
        :param user_id: Specifies which user to search for
        :return: Screen name, following, followers in dictionary-like format
        """
        with open(self.CACHE_FILE_NAME, 'r') as json_file:
            data = json.load(json_file)
            try:
                json_file.close()
                return data[str(user_id)]
            except KeyError:
                json_file.close()
                return None

    def append_to_cache(self, user_id, screen_name, following_ids=None, follower_ids=None):
        """
        Appends additional information to cache.
        :param user_id: Appends information of user with id 'user_id'; primary key
        :param screen_name: Screen name of user
        :param following_ids: IDs of users that are followed by the user
        :param follower_ids: IDs of users that follow the user
        """
        if follower_ids is None:
            follower_ids = []
        if following_ids is None:
            following_ids = []

        old_data = self.read_from_cache(user_id=user_id)
        if old_data is not None:
            following_ids = list(set(following_ids).union(set(old_data['following'])))
            follower_ids = list(set(following_ids).union(set(old_data['followers'])))
        to_append = {
            str(user_id):
                {
                    'screen_name': screen_name,
                    'following': following_ids,
                    'followers': follower_ids
                }
        }
        with open(self.CACHE_FILE_NAME, 'r+') as json_file:
            data = json.load(json_file)
            data.update(to_append)
            json_file.seek(0)
            json.dump(data, json_file)
            json_file.close()

    def remove_all_occurrences(self, user_id):
        """
        Removes all occurrences of a user from cache.
        :param user_id: Target user id
        """
        with open(self.CACHE_FILE_NAME, 'r+') as json_file:
            # print('yo')
            data = json.load(json_file)
            try:
                del data[str(user_id)]
            except KeyError:
                pass
            for k, v in data.items():
                if v['following'] is not None:
                    if user_id in v['following']:
                        v['following'].remove(user_id)
                        # print('yo')
            json_file.truncate(0)
            json_file.seek(0)
            # print(data)
            json.dump(data, json_file)
            json_file.close()

# if __name__ == "__main__":
#     test_id = 975745271492632590
#     test_list = [88541512, 798490579000651776, 958843618764230656, 4685749051, 2417677048, 3233484298, 921899069009690624, 1263978803073658880, 3391797899, 847056817935077376, 859786562883788805, 972198287674572801, 87853948, 1069524595, 2637230371, 2938601992, 1183334323832999936, 3533419573, 500042487, 890972066081624068, 2288689224, 3138332157, 93659369, 1092884245, 815180156478324736, 928022995964190720, 1171030339491422208, 760067762651881472, 1267419789913321472, 4832175413, 1373079024, 990903400224247808, 2853866236, 1007222892294262795, 1176723320089169920, 2467665067, 1252665901834539014, 1365017234, 5402612, 612473, 3105133073, 890466481942675456, 729049710, 76053542, 2909403579, 1163430001259290627, 720304022112985089, 46460174, 183905912, 532116911, 987387666147655680, 902274570945691648, 1269863883826622464, 1272679503257632774, 2830299550, 984896869372313600, 181252570, 743405617717600257, 304679484, 1002970354149519360, 1286429161427533825, 3707747836, 1235529661226119168, 1163670226065428480, 1268562849275707395, 61033129, 886396579984404480, 466250750, 3635140215, 3234679302, 36712332, 803321113379934212, 1196007308074995714, 40797778, 784110682878935040, 1016621637226004481, 816711729581158400, 1112066705419837440, 1726551690, 818668163466457088, 403614288, 598028698, 141944292, 922843027147821056, 2805841779, 2251279068, 86107034, 39410781, 948276761954938880, 992441483625189376, 950834917667196929, 921936953318281216, 757276230370537472, 702671204, 1083065993860186113, 785514258239029248, 414995075, 941241779596283904, 142700040, 20188930, 297589050, 2344209337, 1283051225320173568, 3246529745, 1206146154, 3152215268, 703495537094479872, 1083447858, 1053225277629849601, 20884428, 3253888040, 1017945759533207553, 917619627584303106, 793179685551280128, 178264534, 1399932092, 3928745231, 1090294693550850050, 3661359927, 2184631718, 1265305341547470852, 918290890774294528, 86334573, 4716167654, 1135122595, 1036031424426594304, 3197657226, 991641983314812928, 969443094419488769, 497548866, 1080627413975851008, 51689919, 124614926, 438516229, 1066756890800074752, 844104026270679040, 3757137614, 3363981729, 970943386868899840, 1142926866791260160, 1009577803304656896, 2537825904, 2349536690, 517346447, 738080573365702657, 1194413925569159169, 4332363863, 709599527326470146, 736699688125075456, 832111273605148672, 4817827031, 4174366991, 3148313626, 218947260, 339195461, 506341985, 4355994922, 864379201423585282, 753022137783480320, 939091, 1243196401439277063, 1041966026693509120, 2363543587, 53343256, 420512951, 845000215434211328, 547293931, 2778598926, 207120515, 283906817, 749197086, 4613834835, 372453701, 851767989250772992, 841800859096891392, 402938330, 3368537541, 4771447669, 918943091192627200, 14229141, 55386535, 3064880050, 3293029677, 2282608831, 824365732456710147, 963121317334732801, 2742776272, 2891363009, 3220885052, 3382415499, 112897001, 523317039, 920621546619760640, 2401215750, 1093780852520161280, 1272721394, 2986471820, 731025997, 34580014, 2825934283, 2596737199, 552366919, 503875377, 307561952, 552651893, 2293112606, 384855296, 1417678880, 3351760203, 3996021815, 2698375908, 1227912542, 1732032055, 2305870420, 831259300551073792, 2151551419, 496012442, 3320788875, 2853740205, 2827130282, 3238641808, 1235706470689320961, 427182684, 3038925132, 2806267256, 700217389, 2833268733, 253226800, 626004726, 83989296, 281651322, 30672312, 2436022880, 2214159667, 724857264, 1446313386, 2435672215, 758448843692310528, 2883581903, 34002876, 16905329, 1230550898616586242, 772221540410597376, 1156847157309140992, 1224271898659389440, 2244953047, 1052707213368840192, 1110289076370837504, 1202743029150306304, 304546834, 307886497, 897754452, 2814979514, 1039631064, 2927216186, 3644811674, 353780675, 4477793594, 1438285513, 257268592, 1975735430, 2382386612, 1209608880, 2710410020, 112445679, 1119849220679196672, 1005821053401169921, 1143687311814733826, 2246088023, 1542453360, 932727660459057154, 955562727661015041, 200073621, 2802759144, 1560960798, 3090993257, 68819587, 1156716587405258752, 90420314, 2794785106, 2260704146, 905187365957771264, 2555339528, 2347049341, 323599188, 312193299, 1277844344, 18115441, 1688600882, 418810402, 875552838, 519708002, 806672194772209664, 884020222235115521, 886539962740596736, 2227360182, 741030184908914688, 4213926433, 831379963689308160, 220064630, 721557673754234881, 29054474, 790083355, 2964864604, 72644483, 451119120, 202437364, 2446032547, 1004171414574944256, 826288847562559488, 918363298315190272, 1899625998, 37950212, 775539550818963456, 766956368901255172, 550773512, 4860273459, 926315744719028224, 226351464, 170964004, 4074669885, 765293035114684416, 704423671075475457, 236827933, 869550378421018624, 605929705, 724679090721140736, 823556904463060992, 1428617245, 833108136747732992, 752499839452192768, 3057067101, 349170711, 4747592661, 3231174050, 1556675336, 592955774, 3193304189, 2358854364, 2274040118, 759222695108149248, 757134104395644928, 399404516, 2812439101, 300150080, 774384684642033665, 927404765557985280, 3145446302, 781569451858792448, 726865346846691329, 1537083344, 46335511, 15690708, 891450230, 245548093, 951630050239107074, 16476546, 210131101, 78194111, 16573941, 33540700, 1550520115, 16305370, 44196397, 4438965619, 329533646, 19725644, 37710752, 794340244967538689, 1219288188, 2398211707, 33696409, 1096084052, 1344951, 9989862, 2413696970, 813286, 21470979, 15460048, 16536844, 6717192, 15353955, 74244916]
#     append_to_cache(test_id, test_list)
